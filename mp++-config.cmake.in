# Get current dir.
get_filename_component(_MPPP_CONFIG_SELF_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

# Find the deps. Alter the cmake module path.
set(_MPPP_CONFIG_OLD_MODULE_PATH "${CMAKE_MODULE_PATH}")
list(APPEND CMAKE_MODULE_PATH "${_MPPP_CONFIG_SELF_DIR}")

# Mandatory dep on GMP.
find_package(mp++_GMP REQUIRED)

# Public optional deps.
if(@MPPP_WITH_MPFR@)
    find_package(mp++_MPFR REQUIRED)
endif()
set(mp++_WITH_MPFR @MPPP_WITH_MPFR@)

if(@MPPP_WITH_MPC@)
    find_package(mp++_MPC REQUIRED)
endif()
set(mp++_WITH_MPC @MPPP_WITH_MPC@)

if(@MPPP_WITH_BOOST_S11N@)
    # NOTE: we look for Boost in CONFIG mode first, as that has become the official supported way
    # of locating Boost in recent Boost/CMake versions. If we fail, we try again in
    # MODULE mode as last resort.
    find_package(Boost @_MPPP_MIN_BOOST_VERSION@ QUIET COMPONENTS serialization CONFIG)
    if(NOT ${Boost_FOUND})
        find_package(Boost @_MPPP_MIN_BOOST_VERSION@ QUIET MODULE COMPONENTS serialization)
    endif()
    if(NOT ${Boost_FOUND})
        message(FATAL_ERROR "Could not locate Boost in either CONFIG or MODULE mode.")
    endif()
endif()
set(mp++_WITH_BOOST_S11N @MPPP_WITH_BOOST_S11N@)

if(@MPPP_WITH_FMT@)
    find_package(fmt @_MPPP_MIN_FMT_VERSION@ REQUIRED CONFIG)
endif()
set(mp++_WITH_FMT @MPPP_WITH_FMT@)

# Private optional deps.
set(mp++_WITH_FLINT @MPPP_WITH_FLINT@)
set(mp++_WITH_QUADMATH @MPPP_WITH_QUADMATH@)

# Export the ABI version.
set(mp++_ABI_VERSION @MPPP_ABI_VERSION@)

# Restore original module path.
set(CMAKE_MODULE_PATH "${_MPPP_CONFIG_OLD_MODULE_PATH}")
unset(_MPPP_CONFIG_OLD_MODULE_PATH)

include(${_MPPP_CONFIG_SELF_DIR}/mp++_export.cmake)

# Clean up.
unset(_MPPP_CONFIG_SELF_DIR)
